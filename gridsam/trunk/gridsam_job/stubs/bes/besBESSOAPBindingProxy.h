/* besBESSOAPBindingProxy.h
   Generated by gSOAP 2.7.11 from ./wsdl/wsdl/basic-execution-service.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef besBESSOAPBindingProxy_H
#define besBESSOAPBindingProxy_H
#include "besH.h"

namespace bes {

class SOAP_CMAC BESSOAPBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'BESSOAPBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	BESSOAPBindingProxy();
	/// Constructor with copy of another engine state
	BESSOAPBindingProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	BESSOAPBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	BESSOAPBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~BESSOAPBindingProxy();
	/// Initializer used by constructor
	virtual	void BESSOAPBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'CreateActivityFromJSDL' (returns error code or SOAP_OK)
	virtual	int CreateActivityFromJSDL(_bes__CreateActivityFromJSDL *bes__CreateActivityFromJSDL, _bes__CreateActivityFromJSDLResponse *bes__CreateActivityFromJSDLResponse);

	/// Web service operation 'GetActivityStatus' (returns error code or SOAP_OK)
	virtual	int GetActivityStatus(_bes__GetActivityStatus *bes__GetActivityStatus, _bes__GetActivityStatusResponse *bes__GetActivityStatusResponse);

	/// Web service operation 'RequestActivityStateChanges' (returns error code or SOAP_OK)
	virtual	int RequestActivityStateChanges(_bes__RequestActivityStateChanges *bes__RequestActivityStateChanges, _bes__RequestActivityStateChangesResponse *bes__RequestActivityStateChangesResponse);

	/// Web service operation 'StopAcceptingNewActivities' (returns error code or SOAP_OK)
	virtual	int StopAcceptingNewActivities(char *bes__StopAcceptingNewActivities, char *&bes__StopAcceptingNewActivitiesResponse);

	/// Web service operation 'StartAcceptingNewActivities' (returns error code or SOAP_OK)
	virtual	int StartAcceptingNewActivities(char *bes__StartAcceptingNewActivities, char *&bes__StartAcceptingNewActivitiesResponse);

	/// Web service operation 'IsAcceptingNewActivities' (returns error code or SOAP_OK)
	virtual	int IsAcceptingNewActivities(char *bes__IsAcceptingNewActivities, _bes__IsAcceptingNewActivitiesResponse *bes__IsAcceptingNewActivitiesResponse);

	/// Web service operation 'GetActivityJSDLDocuments' (returns error code or SOAP_OK)
	virtual	int GetActivityJSDLDocuments(_bes__GetActivityJSDLDocuments *bes__GetActivityJSDLDocuments, _bes__GetActivityJSDLDocumentsResponse *bes__GetActivityJSDLDocumentsResponse);
};

} // namespace bes

#endif
