/* besfactoryBESFactorySOAPBindingProxy.cpp
   Generated by gSOAP 2.7.11 from ./wsdl/wsdl/bes-factory.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "besfactoryBESFactorySOAPBindingProxy.h"

namespace besfactory {

BESFactorySOAPBindingProxy::BESFactorySOAPBindingProxy()
{	BESFactorySOAPBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BESFactorySOAPBindingProxy::BESFactorySOAPBindingProxy(const struct soap &soap)
{	soap_copy_context(this, &soap);
	BESFactorySOAPBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BESFactorySOAPBindingProxy::BESFactorySOAPBindingProxy(soap_mode iomode)
{	BESFactorySOAPBindingProxy_init(iomode, iomode);
}

BESFactorySOAPBindingProxy::BESFactorySOAPBindingProxy(soap_mode imode, soap_mode omode)
{	BESFactorySOAPBindingProxy_init(imode, omode);
}

void BESFactorySOAPBindingProxy::BESFactorySOAPBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"besfactory2", "http://www.w3.org/2005/08/addressing", NULL, NULL},
	{"jsdl", "http://schemas.ggf.org/jsdl/2005/11/jsdl", NULL, NULL},
	{"besfactory", "http://schemas.ggf.org/bes/2006/08/bes-factory", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	if (!this->namespaces)
		this->namespaces = namespaces;
}

BESFactorySOAPBindingProxy::~BESFactorySOAPBindingProxy()
{ }

void BESFactorySOAPBindingProxy::soap_noheader()
{	header = NULL;
}

const SOAP_ENV__Fault *BESFactorySOAPBindingProxy::soap_fault()
{	return (const besfactory::SOAP_ENV__Fault*)this->fault;
}

const char *BESFactorySOAPBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *BESFactorySOAPBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int BESFactorySOAPBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

void BESFactorySOAPBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void BESFactorySOAPBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *BESFactorySOAPBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int BESFactorySOAPBindingProxy::CreateActivity(besfactory__CreateActivityType *besfactory__CreateActivity, besfactory__CreateActivityResponseType *besfactory__CreateActivityResponse)
{	struct soap *soap = this;
	struct __besfactory__CreateActivity soap_tmp___besfactory__CreateActivity;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___besfactory__CreateActivity.besfactory__CreateActivity = besfactory__CreateActivity;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___besfactory__CreateActivity(soap, &soap_tmp___besfactory__CreateActivity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___besfactory__CreateActivity(soap, &soap_tmp___besfactory__CreateActivity, "-besfactory:CreateActivity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___besfactory__CreateActivity(soap, &soap_tmp___besfactory__CreateActivity, "-besfactory:CreateActivity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!besfactory__CreateActivityResponse)
		return soap_closesock(soap);
	besfactory__CreateActivityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	besfactory__CreateActivityResponse->soap_get(soap, "besfactory:CreateActivityResponse", "besfactory:CreateActivityResponseType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BESFactorySOAPBindingProxy::GetActivityStatuses(besfactory__GetActivityStatusesType *besfactory__GetActivityStatuses, besfactory__GetActivityStatusesResponseType *besfactory__GetActivityStatusesResponse)
{	struct soap *soap = this;
	struct __besfactory__GetActivityStatuses soap_tmp___besfactory__GetActivityStatuses;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___besfactory__GetActivityStatuses.besfactory__GetActivityStatuses = besfactory__GetActivityStatuses;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___besfactory__GetActivityStatuses(soap, &soap_tmp___besfactory__GetActivityStatuses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___besfactory__GetActivityStatuses(soap, &soap_tmp___besfactory__GetActivityStatuses, "-besfactory:GetActivityStatuses", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___besfactory__GetActivityStatuses(soap, &soap_tmp___besfactory__GetActivityStatuses, "-besfactory:GetActivityStatuses", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!besfactory__GetActivityStatusesResponse)
		return soap_closesock(soap);
	besfactory__GetActivityStatusesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	besfactory__GetActivityStatusesResponse->soap_get(soap, "besfactory:GetActivityStatusesResponse", "besfactory:GetActivityStatusesResponseType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BESFactorySOAPBindingProxy::TerminateActivities(besfactory__TerminateActivitiesType *besfactory__TerminateActivities, besfactory__TerminateActivitiesResponseType *besfactory__TerminateActivitiesResponse)
{	struct soap *soap = this;
	struct __besfactory__TerminateActivities soap_tmp___besfactory__TerminateActivities;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___besfactory__TerminateActivities.besfactory__TerminateActivities = besfactory__TerminateActivities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___besfactory__TerminateActivities(soap, &soap_tmp___besfactory__TerminateActivities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___besfactory__TerminateActivities(soap, &soap_tmp___besfactory__TerminateActivities, "-besfactory:TerminateActivities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___besfactory__TerminateActivities(soap, &soap_tmp___besfactory__TerminateActivities, "-besfactory:TerminateActivities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!besfactory__TerminateActivitiesResponse)
		return soap_closesock(soap);
	besfactory__TerminateActivitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	besfactory__TerminateActivitiesResponse->soap_get(soap, "besfactory:TerminateActivitiesResponse", "besfactory:TerminateActivitiesResponseType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BESFactorySOAPBindingProxy::GetActivityDocuments(besfactory__GetActivityDocumentsType *besfactory__GetActivityDocuments, besfactory__GetActivityDocumentsResponseType *besfactory__GetActivityDocumentsResponse)
{	struct soap *soap = this;
	struct __besfactory__GetActivityDocuments soap_tmp___besfactory__GetActivityDocuments;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___besfactory__GetActivityDocuments.besfactory__GetActivityDocuments = besfactory__GetActivityDocuments;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___besfactory__GetActivityDocuments(soap, &soap_tmp___besfactory__GetActivityDocuments);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___besfactory__GetActivityDocuments(soap, &soap_tmp___besfactory__GetActivityDocuments, "-besfactory:GetActivityDocuments", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___besfactory__GetActivityDocuments(soap, &soap_tmp___besfactory__GetActivityDocuments, "-besfactory:GetActivityDocuments", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!besfactory__GetActivityDocumentsResponse)
		return soap_closesock(soap);
	besfactory__GetActivityDocumentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	besfactory__GetActivityDocumentsResponse->soap_get(soap, "besfactory:GetActivityDocumentsResponse", "besfactory:GetActivityDocumentsResponseType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BESFactorySOAPBindingProxy::GetFactoryAttributesDocument(besfactory__GetFactoryAttributesDocumentType *besfactory__GetFactoryAttributesDocument, besfactory__GetFactoryAttributesDocumentResponseType *besfactory__GetFactoryAttributesDocumentResponse)
{	struct soap *soap = this;
	struct __besfactory__GetFactoryAttributesDocument soap_tmp___besfactory__GetFactoryAttributesDocument;
	const char *soap_action = NULL;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost";
	soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___besfactory__GetFactoryAttributesDocument.besfactory__GetFactoryAttributesDocument = besfactory__GetFactoryAttributesDocument;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___besfactory__GetFactoryAttributesDocument(soap, &soap_tmp___besfactory__GetFactoryAttributesDocument);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___besfactory__GetFactoryAttributesDocument(soap, &soap_tmp___besfactory__GetFactoryAttributesDocument, "-besfactory:GetFactoryAttributesDocument", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___besfactory__GetFactoryAttributesDocument(soap, &soap_tmp___besfactory__GetFactoryAttributesDocument, "-besfactory:GetFactoryAttributesDocument", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!besfactory__GetFactoryAttributesDocumentResponse)
		return soap_closesock(soap);
	besfactory__GetFactoryAttributesDocumentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	besfactory__GetFactoryAttributesDocumentResponse->soap_get(soap, "besfactory:GetFactoryAttributesDocumentResponse", "besfactory:GetFactoryAttributesDocumentResponseType");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace besfactory

/* End of client proxy code */
