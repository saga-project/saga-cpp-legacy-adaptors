/* besfactoryBESFactorySOAPBindingProxy.h
   Generated by gSOAP 2.7.11 from ./wsdl/wsdl/bes-factory.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef besfactoryBESFactorySOAPBindingProxy_H
#define besfactoryBESFactorySOAPBindingProxy_H
#include "besfactoryH.h"

namespace besfactory {

class SOAP_CMAC BESFactorySOAPBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'BESFactorySOAPBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	BESFactorySOAPBindingProxy();
	/// Constructor with copy of another engine state
	BESFactorySOAPBindingProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	BESFactorySOAPBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	BESFactorySOAPBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~BESFactorySOAPBindingProxy();
	/// Initializer used by constructor
	virtual	void BESFactorySOAPBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'CreateActivity' (returns error code or SOAP_OK)
	virtual	int CreateActivity(besfactory__CreateActivityType *besfactory__CreateActivity, besfactory__CreateActivityResponseType *besfactory__CreateActivityResponse);

	/// Web service operation 'GetActivityStatuses' (returns error code or SOAP_OK)
	virtual	int GetActivityStatuses(besfactory__GetActivityStatusesType *besfactory__GetActivityStatuses, besfactory__GetActivityStatusesResponseType *besfactory__GetActivityStatusesResponse);

	/// Web service operation 'TerminateActivities' (returns error code or SOAP_OK)
	virtual	int TerminateActivities(besfactory__TerminateActivitiesType *besfactory__TerminateActivities, besfactory__TerminateActivitiesResponseType *besfactory__TerminateActivitiesResponse);

	/// Web service operation 'GetActivityDocuments' (returns error code or SOAP_OK)
	virtual	int GetActivityDocuments(besfactory__GetActivityDocumentsType *besfactory__GetActivityDocuments, besfactory__GetActivityDocumentsResponseType *besfactory__GetActivityDocumentsResponse);

	/// Web service operation 'GetFactoryAttributesDocument' (returns error code or SOAP_OK)
	virtual	int GetFactoryAttributesDocument(besfactory__GetFactoryAttributesDocumentType *besfactory__GetFactoryAttributesDocument, besfactory__GetFactoryAttributesDocumentResponseType *besfactory__GetFactoryAttributesDocumentResponse);
};

} // namespace besfactory

#endif
