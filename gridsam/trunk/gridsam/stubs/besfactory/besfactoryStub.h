/* besfactoryStub.h
   Generated by gSOAP 2.7.11 from ./wsdl/wsdl/bes-factory.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef besfactoryStub_H
#define besfactoryStub_H
#include <vector>
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace besfactory {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_besfactory_besfactory2__RelationshipType
#define SOAP_TYPE_besfactory_besfactory2__RelationshipType (76)
/* besfactory2:RelationshipType */
enum besfactory2__RelationshipType {besfactory2__RelationshipType__http___x002f_x002fwww_x002ew3_x002eorg_x002f2005_x002f08_x002faddressing_x002freply = 0};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__FaultCodesType
#define SOAP_TYPE_besfactory_besfactory2__FaultCodesType (78)
/* besfactory2:FaultCodesType */
enum besfactory2__FaultCodesType {besfactory2__FaultCodesType__besfactory2__InvalidAddressingHeader = 0, besfactory2__FaultCodesType__besfactory2__InvalidAddress = 1, besfactory2__FaultCodesType__besfactory2__InvalidEPR = 2, besfactory2__FaultCodesType__besfactory2__InvalidCardinality = 3, besfactory2__FaultCodesType__besfactory2__MissingAddressInEPR = 4, besfactory2__FaultCodesType__besfactory2__DuplicateMessageID = 5, besfactory2__FaultCodesType__besfactory2__ActionMismatch = 6, besfactory2__FaultCodesType__besfactory2__MessageAddressingHeaderRequired = 7, besfactory2__FaultCodesType__besfactory2__DestinationUnreachable = 8, besfactory2__FaultCodesType__besfactory2__ActionNotSupported = 9, besfactory2__FaultCodesType__besfactory2__EndpointUnavailable = 10};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__ProcessorArchitectureEnumeration
#define SOAP_TYPE_besfactory_jsdl__ProcessorArchitectureEnumeration (80)
/* jsdl:ProcessorArchitectureEnumeration */
enum jsdl__ProcessorArchitectureEnumeration {jsdl__ProcessorArchitectureEnumeration__sparc = 0, jsdl__ProcessorArchitectureEnumeration__powerpc = 1, jsdl__ProcessorArchitectureEnumeration__x86 = 2, jsdl__ProcessorArchitectureEnumeration__x86_USCORE32 = 3, jsdl__ProcessorArchitectureEnumeration__x86_USCORE64 = 4, jsdl__ProcessorArchitectureEnumeration__parisc = 5, jsdl__ProcessorArchitectureEnumeration__mips = 6, jsdl__ProcessorArchitectureEnumeration__ia64 = 7, jsdl__ProcessorArchitectureEnumeration__arm = 8, jsdl__ProcessorArchitectureEnumeration__other = 9};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__OperatingSystemTypeEnumeration
#define SOAP_TYPE_besfactory_jsdl__OperatingSystemTypeEnumeration (82)
/* jsdl:OperatingSystemTypeEnumeration */
enum jsdl__OperatingSystemTypeEnumeration {jsdl__OperatingSystemTypeEnumeration__Unknown = 0, jsdl__OperatingSystemTypeEnumeration__MACOS = 1, jsdl__OperatingSystemTypeEnumeration__ATTUNIX = 2, jsdl__OperatingSystemTypeEnumeration__DGUX = 3, jsdl__OperatingSystemTypeEnumeration__DECNT = 4, jsdl__OperatingSystemTypeEnumeration__Tru64_USCOREUNIX = 5, jsdl__OperatingSystemTypeEnumeration__OpenVMS = 6, jsdl__OperatingSystemTypeEnumeration__HPUX = 7, jsdl__OperatingSystemTypeEnumeration__AIX = 8, jsdl__OperatingSystemTypeEnumeration__MVS = 9, jsdl__OperatingSystemTypeEnumeration__OS400 = 10, jsdl__OperatingSystemTypeEnumeration__OS_USCORE2 = 11, jsdl__OperatingSystemTypeEnumeration__JavaVM = 12, jsdl__OperatingSystemTypeEnumeration__MSDOS = 13, jsdl__OperatingSystemTypeEnumeration__WIN3x = 14, jsdl__OperatingSystemTypeEnumeration__WIN95 = 15, jsdl__OperatingSystemTypeEnumeration__WIN98 = 16, jsdl__OperatingSystemTypeEnumeration__WINNT = 17, jsdl__OperatingSystemTypeEnumeration__WINCE = 18, jsdl__OperatingSystemTypeEnumeration__NCR3000 = 19, jsdl__OperatingSystemTypeEnumeration__NetWare = 20, jsdl__OperatingSystemTypeEnumeration__OSF = 21, jsdl__OperatingSystemTypeEnumeration__DC_USCOREOS = 22, jsdl__OperatingSystemTypeEnumeration__Reliant_USCOREUNIX = 23, jsdl__OperatingSystemTypeEnumeration__SCO_USCOREUnixWare = 24, jsdl__OperatingSystemTypeEnumeration__SCO_USCOREOpenServer = 25, jsdl__OperatingSystemTypeEnumeration__Sequent = 26, jsdl__OperatingSystemTypeEnumeration__IRIX = 27, jsdl__OperatingSystemTypeEnumeration__Solaris = 28, jsdl__OperatingSystemTypeEnumeration__SunOS = 29, jsdl__OperatingSystemTypeEnumeration__U6000 = 30, jsdl__OperatingSystemTypeEnumeration__ASERIES = 31, jsdl__OperatingSystemTypeEnumeration__TandemNSK = 32, jsdl__OperatingSystemTypeEnumeration__TandemNT = 33, jsdl__OperatingSystemTypeEnumeration__BS2000 = 34, jsdl__OperatingSystemTypeEnumeration__LINUX = 35, jsdl__OperatingSystemTypeEnumeration__Lynx = 36, jsdl__OperatingSystemTypeEnumeration__XENIX = 37, jsdl__OperatingSystemTypeEnumeration__VM = 38, jsdl__OperatingSystemTypeEnumeration__Interactive_USCOREUNIX = 39, jsdl__OperatingSystemTypeEnumeration__BSDUNIX = 40, jsdl__OperatingSystemTypeEnumeration__FreeBSD = 41, jsdl__OperatingSystemTypeEnumeration__NetBSD = 42, jsdl__OperatingSystemTypeEnumeration__GNU_USCOREHurd = 43, jsdl__OperatingSystemTypeEnumeration__OS9 = 44, jsdl__OperatingSystemTypeEnumeration__MACH_USCOREKernel = 45, jsdl__OperatingSystemTypeEnumeration__Inferno = 46, jsdl__OperatingSystemTypeEnumeration__QNX = 47, jsdl__OperatingSystemTypeEnumeration__EPOC = 48, jsdl__OperatingSystemTypeEnumeration__IxWorks = 49, jsdl__OperatingSystemTypeEnumeration__VxWorks = 50, jsdl__OperatingSystemTypeEnumeration__MiNT = 51, jsdl__OperatingSystemTypeEnumeration__BeOS = 52, jsdl__OperatingSystemTypeEnumeration__HP_USCOREMPE = 53, jsdl__OperatingSystemTypeEnumeration__NextStep = 54, jsdl__OperatingSystemTypeEnumeration__PalmPilot = 55, jsdl__OperatingSystemTypeEnumeration__Rhapsody = 56, jsdl__OperatingSystemTypeEnumeration__Windows_USCORE2000 = 57, jsdl__OperatingSystemTypeEnumeration__Dedicated = 58, jsdl__OperatingSystemTypeEnumeration__OS_USCORE390 = 59, jsdl__OperatingSystemTypeEnumeration__VSE = 60, jsdl__OperatingSystemTypeEnumeration__TPF = 61, jsdl__OperatingSystemTypeEnumeration__Windows_USCORER_USCOREMe = 62, jsdl__OperatingSystemTypeEnumeration__Caldera_USCOREOpen_USCOREUNIX = 63, jsdl__OperatingSystemTypeEnumeration__OpenBSD = 64, jsdl__OperatingSystemTypeEnumeration__Not_USCOREApplicable = 65, jsdl__OperatingSystemTypeEnumeration__Windows_USCOREXP = 66, jsdl__OperatingSystemTypeEnumeration__z_USCOREOS = 67, jsdl__OperatingSystemTypeEnumeration__other = 68};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__FileSystemTypeEnumeration
#define SOAP_TYPE_besfactory_jsdl__FileSystemTypeEnumeration (84)
/* jsdl:FileSystemTypeEnumeration */
enum jsdl__FileSystemTypeEnumeration {jsdl__FileSystemTypeEnumeration__swap = 0, jsdl__FileSystemTypeEnumeration__temporary = 1, jsdl__FileSystemTypeEnumeration__spool = 2, jsdl__FileSystemTypeEnumeration__normal = 3};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__CreationFlagEnumeration
#define SOAP_TYPE_besfactory_jsdl__CreationFlagEnumeration (86)
/* jsdl:CreationFlagEnumeration */
enum jsdl__CreationFlagEnumeration {jsdl__CreationFlagEnumeration__overwrite = 0, jsdl__CreationFlagEnumeration__append = 1, jsdl__CreationFlagEnumeration__dontOverwrite = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_besfactory_xsd__anyType
#define SOAP_TYPE_besfactory_xsd__anyType (8)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_besfactory_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() : __item(NULL), soap(NULL) { }
	virtual ~xsd__anyType() { }
};
#endif

#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_besfactory_xsd__ID_
#define SOAP_TYPE_besfactory_xsd__ID_ (12)
/* Primitive xsd:ID schema type: */
class SOAP_CMAC xsd__ID_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_besfactory_xsd__ID_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__ID_()  { }
	virtual ~xsd__ID_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__NCName_
#define SOAP_TYPE_besfactory_xsd__NCName_ (14)
/* Primitive xsd:NCName schema type: */
class SOAP_CMAC xsd__NCName_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_besfactory_xsd__NCName_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__NCName_()  { }
	virtual ~xsd__NCName_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__QName_
#define SOAP_TYPE_besfactory_xsd__QName_ (16)
/* Primitive xsd:QName schema type: */
class SOAP_CMAC xsd__QName_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_besfactory_xsd__QName_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__QName_()  { }
	virtual ~xsd__QName_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__anyURI_
#define SOAP_TYPE_besfactory_xsd__anyURI_ (18)
/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_besfactory_xsd__anyURI_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyURI_()  { }
	virtual ~xsd__anyURI_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__boolean
#define SOAP_TYPE_besfactory_xsd__boolean (19)
/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean : public xsd__anyType
{
public:
	bool __item;
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_besfactory_xsd__boolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__boolean() : __item((bool)0) { }
	virtual ~xsd__boolean() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__double
#define SOAP_TYPE_besfactory_xsd__double (21)
/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double : public xsd__anyType
{
public:
	double __item;
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_besfactory_xsd__double */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__double() : __item(0) { }
	virtual ~xsd__double() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__string
#define SOAP_TYPE_besfactory_xsd__string (23)
/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_besfactory_xsd__string */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__string()  { }
	virtual ~xsd__string() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__unsignedInt
#define SOAP_TYPE_besfactory_xsd__unsignedInt (24)
/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt : public xsd__anyType
{
public:
	unsigned int __item;
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_besfactory_xsd__unsignedInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedInt() : __item(0) { }
	virtual ~xsd__unsignedInt() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_xsd__unsignedLong
#define SOAP_TYPE_besfactory_xsd__unsignedLong (26)
/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong : public xsd__anyType
{
public:
	ULONG64 __item;
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_besfactory_xsd__unsignedLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedLong() : __item(0) { }
	virtual ~xsd__unsignedLong() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__RelationshipType_
#define SOAP_TYPE_besfactory_besfactory2__RelationshipType_ (77)
/* Primitive besfactory2:RelationshipType schema type: */
class SOAP_CMAC besfactory2__RelationshipType_ : public xsd__anyType
{
public:
	enum besfactory2__RelationshipType __item;
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_besfactory_besfactory2__RelationshipType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__RelationshipType_() : __item((enum besfactory2__RelationshipType)0) { }
	virtual ~besfactory2__RelationshipType_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__FaultCodesType_
#define SOAP_TYPE_besfactory_besfactory2__FaultCodesType_ (79)
/* Primitive besfactory2:FaultCodesType schema type: */
class SOAP_CMAC besfactory2__FaultCodesType_ : public xsd__anyType
{
public:
	enum besfactory2__FaultCodesType __item;
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_besfactory_besfactory2__FaultCodesType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__FaultCodesType_() : __item((enum besfactory2__FaultCodesType)0) { }
	virtual ~besfactory2__FaultCodesType_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__ProcessorArchitectureEnumeration_
#define SOAP_TYPE_besfactory_jsdl__ProcessorArchitectureEnumeration_ (81)
/* Primitive jsdl:ProcessorArchitectureEnumeration schema type: */
class SOAP_CMAC jsdl__ProcessorArchitectureEnumeration_ : public xsd__anyType
{
public:
	enum jsdl__ProcessorArchitectureEnumeration __item;
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_besfactory_jsdl__ProcessorArchitectureEnumeration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__ProcessorArchitectureEnumeration_() : __item((enum jsdl__ProcessorArchitectureEnumeration)0) { }
	virtual ~jsdl__ProcessorArchitectureEnumeration_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__OperatingSystemTypeEnumeration_
#define SOAP_TYPE_besfactory_jsdl__OperatingSystemTypeEnumeration_ (83)
/* Primitive jsdl:OperatingSystemTypeEnumeration schema type: */
class SOAP_CMAC jsdl__OperatingSystemTypeEnumeration_ : public xsd__anyType
{
public:
	enum jsdl__OperatingSystemTypeEnumeration __item;
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE_besfactory_jsdl__OperatingSystemTypeEnumeration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__OperatingSystemTypeEnumeration_() : __item((enum jsdl__OperatingSystemTypeEnumeration)0) { }
	virtual ~jsdl__OperatingSystemTypeEnumeration_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__FileSystemTypeEnumeration_
#define SOAP_TYPE_besfactory_jsdl__FileSystemTypeEnumeration_ (85)
/* Primitive jsdl:FileSystemTypeEnumeration schema type: */
class SOAP_CMAC jsdl__FileSystemTypeEnumeration_ : public xsd__anyType
{
public:
	enum jsdl__FileSystemTypeEnumeration __item;
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_besfactory_jsdl__FileSystemTypeEnumeration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__FileSystemTypeEnumeration_() : __item((enum jsdl__FileSystemTypeEnumeration)0) { }
	virtual ~jsdl__FileSystemTypeEnumeration_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__CreationFlagEnumeration_
#define SOAP_TYPE_besfactory_jsdl__CreationFlagEnumeration_ (87)
/* Primitive jsdl:CreationFlagEnumeration schema type: */
class SOAP_CMAC jsdl__CreationFlagEnumeration_ : public xsd__anyType
{
public:
	enum jsdl__CreationFlagEnumeration __item;
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE_besfactory_jsdl__CreationFlagEnumeration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__CreationFlagEnumeration_() : __item((enum jsdl__CreationFlagEnumeration)0) { }
	virtual ~jsdl__CreationFlagEnumeration_() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Description_USCOREType__
#define SOAP_TYPE_besfactory_jsdl__Description_USCOREType__ (89)
/* Primitive jsdl:Description_Type schema type: */
class SOAP_CMAC jsdl__Description_USCOREType__ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE_besfactory_jsdl__Description_USCOREType__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Description_USCOREType__()  { }
	virtual ~jsdl__Description_USCOREType__() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__BasicFactoryResourceAttributesDocumentType
#define SOAP_TYPE_besfactory_besfactory__BasicFactoryResourceAttributesDocumentType (28)
/* besfactory:BasicFactoryResourceAttributesDocumentType */
class SOAP_CMAC besfactory__BasicFactoryResourceAttributesDocumentType : public xsd__anyType
{
public:
	class jsdl__OperatingSystem_USCOREType *OperatingSystem;	/* optional element of type jsdl:OperatingSystem_Type */
	class jsdl__CPUArchitecture_USCOREType *CPUArchitecture;	/* optional element of type jsdl:CPUArchitecture_Type */
	unsigned int *CPUCount;	/* optional element of type xsd:unsignedInt */
	ULONG64 *CPUSpeed;	/* optional element of type xsd:unsignedLong */
	ULONG64 *PhysicalMemory;	/* optional element of type xsd:unsignedLong */
	ULONG64 *VirtualMemory;	/* optional element of type xsd:unsignedLong */
	std::vector<char * >__any;
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_besfactory_besfactory__BasicFactoryResourceAttributesDocumentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__BasicFactoryResourceAttributesDocumentType() : OperatingSystem(NULL), CPUArchitecture(NULL), CPUCount(NULL), CPUSpeed(NULL), PhysicalMemory(NULL), VirtualMemory(NULL) { }
	virtual ~besfactory__BasicFactoryResourceAttributesDocumentType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__ActivityDocumentType
#define SOAP_TYPE_besfactory_besfactory__ActivityDocumentType (30)
/* besfactory:ActivityDocumentType */
class SOAP_CMAC besfactory__ActivityDocumentType : public xsd__anyType
{
public:
	class jsdl__JobDefinition_USCOREType *jsdl__JobDefinition;	/* required element of type jsdl:JobDefinition_Type */
	std::vector<char * >__any;
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_besfactory_besfactory__ActivityDocumentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__ActivityDocumentType() : jsdl__JobDefinition(NULL) { }
	virtual ~besfactory__ActivityDocumentType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__ActivityStateType
#define SOAP_TYPE_besfactory_besfactory__ActivityStateType (31)
/* besfactory:ActivityStateType */
class SOAP_CMAC besfactory__ActivityStateType : public xsd__anyType
{
public:
	std::vector<char * >__any;
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_besfactory_besfactory__ActivityStateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__ActivityStateType()  { }
	virtual ~besfactory__ActivityStateType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory__besfactory__union_ActivityStatusType
#define SOAP_TYPE_besfactory__besfactory__union_ActivityStatusType (97)
/* xsd:choice */
union _besfactory__union_ActivityStatusType
{
#define SOAP_UNION__besfactory__union_ActivityStatusType_Pending	(1)
	besfactory__ActivityStateType *Pending;
#define SOAP_UNION__besfactory__union_ActivityStatusType_Running	(2)
	besfactory__ActivityStateType *Running;
#define SOAP_UNION__besfactory__union_ActivityStatusType_Cancelled	(3)
	besfactory__ActivityStateType *Cancelled;
#define SOAP_UNION__besfactory__union_ActivityStatusType_Failed	(4)
	besfactory__ActivityStateType *Failed;
#define SOAP_UNION__besfactory__union_ActivityStatusType_Finished	(5)
	besfactory__ActivityStateType *Finished;
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__ActivityStatusType
#define SOAP_TYPE_besfactory_besfactory__ActivityStatusType (32)
/* Choice: */
class SOAP_CMAC besfactory__ActivityStatusType : public xsd__anyType
{
public:
	int __union_ActivityStatusType;	/* union discriminant (of union defined below) */
	union _besfactory__union_ActivityStatusType union_ActivityStatusType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_besfactory_besfactory__ActivityStatusType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__ActivityStatusType() : __union_ActivityStatusType(0) { }
	virtual ~besfactory__ActivityStatusType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityStatusResponseType
#define SOAP_TYPE_besfactory_besfactory__GetActivityStatusResponseType (33)
/* besfactory:GetActivityStatusResponseType */
class SOAP_CMAC besfactory__GetActivityStatusResponseType : public xsd__anyType
{
public:
	class besfactory2__EndpointReferenceType *besfactory__ActivityIdentifier;	/* required element of type besfactory2:EndpointReferenceType */
	besfactory__ActivityStatusType *besfactory__ActivityStatus;	/* optional element of type besfactory:ActivityStatusType */
	xsd__anyType *Fault;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityStatusResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityStatusResponseType() : besfactory__ActivityIdentifier(NULL), besfactory__ActivityStatus(NULL), Fault(NULL) { }
	virtual ~besfactory__GetActivityStatusResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityDocumentResponseType
#define SOAP_TYPE_besfactory_besfactory__GetActivityDocumentResponseType (34)
/* besfactory:GetActivityDocumentResponseType */
class SOAP_CMAC besfactory__GetActivityDocumentResponseType : public xsd__anyType
{
public:
	besfactory2__EndpointReferenceType *besfactory__ActivityIdentifier;	/* required element of type besfactory2:EndpointReferenceType */
	jsdl__JobDefinition_USCOREType *jsdl__JobDefinition;	/* optional element of type jsdl:JobDefinition_Type */
	xsd__anyType *Fault;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityDocumentResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityDocumentResponseType() : besfactory__ActivityIdentifier(NULL), jsdl__JobDefinition(NULL), Fault(NULL) { }
	virtual ~besfactory__GetActivityDocumentResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__TerminateActivityResponseType
#define SOAP_TYPE_besfactory_besfactory__TerminateActivityResponseType (35)
/* besfactory:TerminateActivityResponseType */
class SOAP_CMAC besfactory__TerminateActivityResponseType : public xsd__anyType
{
public:
	besfactory2__EndpointReferenceType *besfactory__ActivityIdentifier;	/* required element of type besfactory2:EndpointReferenceType */
	bool Cancelled;	/* required element of type xsd:boolean */
	xsd__anyType *Fault;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_besfactory_besfactory__TerminateActivityResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__TerminateActivityResponseType() : besfactory__ActivityIdentifier(NULL), Cancelled((bool)0), Fault(NULL) { }
	virtual ~besfactory__TerminateActivityResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__CreateActivityType
#define SOAP_TYPE_besfactory_besfactory__CreateActivityType (36)
/* besfactory:CreateActivityType */
class SOAP_CMAC besfactory__CreateActivityType : public xsd__anyType
{
public:
	besfactory__ActivityDocumentType *besfactory__ActivityDocument;	/* required element of type besfactory:ActivityDocumentType */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_besfactory_besfactory__CreateActivityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__CreateActivityType() : besfactory__ActivityDocument(NULL) { }
	virtual ~besfactory__CreateActivityType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__CreateActivityResponseType
#define SOAP_TYPE_besfactory_besfactory__CreateActivityResponseType (37)
/* besfactory:CreateActivityResponseType */
class SOAP_CMAC besfactory__CreateActivityResponseType : public xsd__anyType
{
public:
	besfactory2__EndpointReferenceType *besfactory__ActivityIdentifier;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type besfactory2:EndpointReferenceType */
	besfactory__ActivityDocumentType *besfactory__ActivityDocument;	/* optional element of type besfactory:ActivityDocumentType */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_besfactory_besfactory__CreateActivityResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__CreateActivityResponseType() : besfactory__ActivityIdentifier(NULL), besfactory__ActivityDocument(NULL) { }
	virtual ~besfactory__CreateActivityResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityStatusesType
#define SOAP_TYPE_besfactory_besfactory__GetActivityStatusesType (38)
/* besfactory:GetActivityStatusesType */
class SOAP_CMAC besfactory__GetActivityStatusesType : public xsd__anyType
{
public:
	std::vector<besfactory2__EndpointReferenceType * >ActivityIdentifier;	/* required element of type besfactory2:EndpointReferenceType */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityStatusesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityStatusesType()  { }
	virtual ~besfactory__GetActivityStatusesType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityStatusesResponseType
#define SOAP_TYPE_besfactory_besfactory__GetActivityStatusesResponseType (39)
/* besfactory:GetActivityStatusesResponseType */
class SOAP_CMAC besfactory__GetActivityStatusesResponseType : public xsd__anyType
{
public:
	std::vector<besfactory__GetActivityStatusResponseType * >Response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type besfactory:GetActivityStatusResponseType */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityStatusesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityStatusesResponseType()  { }
	virtual ~besfactory__GetActivityStatusesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__TerminateActivitiesType
#define SOAP_TYPE_besfactory_besfactory__TerminateActivitiesType (40)
/* besfactory:TerminateActivitiesType */
class SOAP_CMAC besfactory__TerminateActivitiesType : public xsd__anyType
{
public:
	std::vector<besfactory2__EndpointReferenceType * >besfactory__ActivityIdentifier;	/* optional element of type besfactory2:EndpointReferenceType */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_besfactory_besfactory__TerminateActivitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__TerminateActivitiesType()  { }
	virtual ~besfactory__TerminateActivitiesType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__TerminateActivitiesResponseType
#define SOAP_TYPE_besfactory_besfactory__TerminateActivitiesResponseType (41)
/* besfactory:TerminateActivitiesResponseType */
class SOAP_CMAC besfactory__TerminateActivitiesResponseType : public xsd__anyType
{
public:
	std::vector<besfactory__TerminateActivityResponseType * >Response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type besfactory:TerminateActivityResponseType */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_besfactory_besfactory__TerminateActivitiesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__TerminateActivitiesResponseType()  { }
	virtual ~besfactory__TerminateActivitiesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsType
#define SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsType (42)
/* besfactory:GetActivityDocumentsType */
class SOAP_CMAC besfactory__GetActivityDocumentsType : public xsd__anyType
{
public:
	std::vector<besfactory2__EndpointReferenceType * >besfactory__ActivityIdentifier;	/* optional element of type besfactory2:EndpointReferenceType */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityDocumentsType()  { }
	virtual ~besfactory__GetActivityDocumentsType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsResponseType
#define SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsResponseType (43)
/* besfactory:GetActivityDocumentsResponseType */
class SOAP_CMAC besfactory__GetActivityDocumentsResponseType : public xsd__anyType
{
public:
	std::vector<besfactory__GetActivityDocumentResponseType * >Response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type besfactory:GetActivityDocumentResponseType */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetActivityDocumentsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetActivityDocumentsResponseType()  { }
	virtual ~besfactory__GetActivityDocumentsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentType
#define SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentType (44)
/* Primitive besfactory:GetFactoryAttributesDocumentType schema type: */
class SOAP_CMAC besfactory__GetFactoryAttributesDocumentType : public xsd__anyType
{
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetFactoryAttributesDocumentType()  { }
	virtual ~besfactory__GetFactoryAttributesDocumentType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentResponseType
#define SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentResponseType (45)
/* besfactory:GetFactoryAttributesDocumentResponseType */
class SOAP_CMAC besfactory__GetFactoryAttributesDocumentResponseType : public xsd__anyType
{
public:
	class besfactory__FactoryResourceAttributesDocumentType *besfactory__FactoryResourceAttributesDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type besfactory:FactoryResourceAttributesDocumentType */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_besfactory_besfactory__GetFactoryAttributesDocumentResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__GetFactoryAttributesDocumentResponseType() : besfactory__FactoryResourceAttributesDocument(NULL) { }
	virtual ~besfactory__GetFactoryAttributesDocumentResponseType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__NotAcceptingNewActivitiesFaultType
#define SOAP_TYPE_besfactory_besfactory__NotAcceptingNewActivitiesFaultType (46)
/* Primitive besfactory:NotAcceptingNewActivitiesFaultType schema type: */
class SOAP_CMAC besfactory__NotAcceptingNewActivitiesFaultType : public xsd__anyType
{
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_besfactory_besfactory__NotAcceptingNewActivitiesFaultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__NotAcceptingNewActivitiesFaultType()  { }
	virtual ~besfactory__NotAcceptingNewActivitiesFaultType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__UnsupportedJSDLVersionFaultType
#define SOAP_TYPE_besfactory_besfactory__UnsupportedJSDLVersionFaultType (47)
/* Primitive besfactory:UnsupportedJSDLVersionFaultType schema type: */
class SOAP_CMAC besfactory__UnsupportedJSDLVersionFaultType : public xsd__anyType
{
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_besfactory_besfactory__UnsupportedJSDLVersionFaultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__UnsupportedJSDLVersionFaultType()  { }
	virtual ~besfactory__UnsupportedJSDLVersionFaultType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__UnsupportedFeatureFaultType
#define SOAP_TYPE_besfactory_besfactory__UnsupportedFeatureFaultType (48)
/* besfactory:UnsupportedFeatureFaultType */
class SOAP_CMAC besfactory__UnsupportedFeatureFaultType : public xsd__anyType
{
public:
	std::vector<std::string >Feature;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_besfactory_besfactory__UnsupportedFeatureFaultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__UnsupportedFeatureFaultType()  { }
	virtual ~besfactory__UnsupportedFeatureFaultType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__EndpointReferenceType
#define SOAP_TYPE_besfactory_besfactory2__EndpointReferenceType (49)
/* besfactory2:EndpointReferenceType */
class SOAP_CMAC besfactory2__EndpointReferenceType : public xsd__anyType
{
public:
	class besfactory2__AttributedURIType *Address;	/* required element of type besfactory2:AttributedURIType */
	class besfactory2__ReferenceParametersType *ReferenceParameters;	/* optional element of type besfactory2:ReferenceParametersType */
	class besfactory2__MetadataType *besfactory2__Metadata;	/* optional element of type besfactory2:MetadataType */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_besfactory_besfactory2__EndpointReferenceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__EndpointReferenceType() : Address(NULL), ReferenceParameters(NULL), besfactory2__Metadata(NULL), __anyAttribute(NULL) { }
	virtual ~besfactory2__EndpointReferenceType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__ReferenceParametersType
#define SOAP_TYPE_besfactory_besfactory2__ReferenceParametersType (50)
/* besfactory2:ReferenceParametersType */
class SOAP_CMAC besfactory2__ReferenceParametersType : public xsd__anyType
{
public:
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_besfactory_besfactory2__ReferenceParametersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__ReferenceParametersType() : __anyAttribute(NULL) { }
	virtual ~besfactory2__ReferenceParametersType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__MetadataType
#define SOAP_TYPE_besfactory_besfactory2__MetadataType (51)
/* besfactory2:MetadataType */
class SOAP_CMAC besfactory2__MetadataType : public xsd__anyType
{
public:
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_besfactory_besfactory2__MetadataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__MetadataType() : __anyAttribute(NULL) { }
	virtual ~besfactory2__MetadataType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__AttributedAnyType
#define SOAP_TYPE_besfactory_besfactory2__AttributedAnyType (56)
/* besfactory2:AttributedAnyType */
class SOAP_CMAC besfactory2__AttributedAnyType : public xsd__anyType
{
public:
	char *__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_besfactory_besfactory2__AttributedAnyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__AttributedAnyType() : __any(NULL), __anyAttribute(NULL) { }
	virtual ~besfactory2__AttributedAnyType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__ProblemActionType
#define SOAP_TYPE_besfactory_besfactory2__ProblemActionType (57)
/* besfactory2:ProblemActionType */
class SOAP_CMAC besfactory2__ProblemActionType : public xsd__anyType
{
public:
	besfactory2__AttributedURIType *besfactory2__Action;	/* optional element of type besfactory2:AttributedURIType */
	std::string *SoapAction;	/* optional element of type xsd:anyURI */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_besfactory_besfactory2__ProblemActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__ProblemActionType() : besfactory2__Action(NULL), SoapAction(NULL), __anyAttribute(NULL) { }
	virtual ~besfactory2__ProblemActionType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Range_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Range_USCOREType (60)
/* jsdl:Range_Type */
class SOAP_CMAC jsdl__Range_USCOREType : public xsd__anyType
{
public:
	class jsdl__Boundary_USCOREType *LowerBound;	/* required element of type jsdl:Boundary_Type */
	jsdl__Boundary_USCOREType *UpperBound;	/* required element of type jsdl:Boundary_Type */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_besfactory_jsdl__Range_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Range_USCOREType() : LowerBound(NULL), UpperBound(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__Range_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__RangeValue_USCOREType
#define SOAP_TYPE_besfactory_jsdl__RangeValue_USCOREType (61)
/* jsdl:RangeValue_Type */
class SOAP_CMAC jsdl__RangeValue_USCOREType : public xsd__anyType
{
public:
	jsdl__Boundary_USCOREType *UpperBoundedRange;	/* optional element of type jsdl:Boundary_Type */
	jsdl__Boundary_USCOREType *LowerBoundedRange;	/* optional element of type jsdl:Boundary_Type */
	std::vector<class jsdl__Exact_USCOREType * >Exact;	/* optional element of type jsdl:Exact_Type */
	std::vector<jsdl__Range_USCOREType * >Range;	/* optional element of type jsdl:Range_Type */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_besfactory_jsdl__RangeValue_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__RangeValue_USCOREType() : UpperBoundedRange(NULL), LowerBoundedRange(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__RangeValue_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__JobDefinition_USCOREType
#define SOAP_TYPE_besfactory_jsdl__JobDefinition_USCOREType (62)
/* jsdl:JobDefinition_Type */
class SOAP_CMAC jsdl__JobDefinition_USCOREType : public xsd__anyType
{
public:
	class jsdl__JobDescription_USCOREType *jsdl__JobDescription;	/* required element of type jsdl:JobDescription_Type */
	std::vector<char * >__any;
	std::string *id;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_besfactory_jsdl__JobDefinition_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__JobDefinition_USCOREType() : jsdl__JobDescription(NULL), id(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__JobDefinition_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__JobDescription_USCOREType
#define SOAP_TYPE_besfactory_jsdl__JobDescription_USCOREType (63)
/* jsdl:JobDescription_Type */
class SOAP_CMAC jsdl__JobDescription_USCOREType : public xsd__anyType
{
public:
	class jsdl__JobIdentification_USCOREType *jsdl__JobIdentification;	/* optional element of type jsdl:JobIdentification_Type */
	class jsdl__Application_USCOREType *jsdl__Application;	/* optional element of type jsdl:Application_Type */
	class jsdl__Resources_USCOREType *jsdl__Resources;	/* optional element of type jsdl:Resources_Type */
	std::vector<class jsdl__DataStaging_USCOREType * >jsdl__DataStaging;	/* optional element of type jsdl:DataStaging_Type */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_besfactory_jsdl__JobDescription_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__JobDescription_USCOREType() : jsdl__JobIdentification(NULL), jsdl__Application(NULL), jsdl__Resources(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__JobDescription_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__JobIdentification_USCOREType
#define SOAP_TYPE_besfactory_jsdl__JobIdentification_USCOREType (64)
/* jsdl:JobIdentification_Type */
class SOAP_CMAC jsdl__JobIdentification_USCOREType : public xsd__anyType
{
public:
	std::string *jsdl__JobName;	/* optional element of type xsd:string */
	std::string *jsdl__Description;	/* optional element of type jsdl:Description_Type */
	std::vector<std::string >jsdl__JobAnnotation;	/* optional element of type xsd:string */
	std::vector<std::string >jsdl__JobProject;	/* optional element of type xsd:string */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_besfactory_jsdl__JobIdentification_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__JobIdentification_USCOREType() : jsdl__JobName(NULL), jsdl__Description(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__JobIdentification_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Application_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Application_USCOREType (65)
/* jsdl:Application_Type */
class SOAP_CMAC jsdl__Application_USCOREType : public xsd__anyType
{
public:
	std::string *jsdl__ApplicationName;	/* optional element of type xsd:string */
	std::string *jsdl__ApplicationVersion;	/* optional element of type xsd:string */
	std::string *jsdl__Description;	/* optional element of type jsdl:Description_Type */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_besfactory_jsdl__Application_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Application_USCOREType() : jsdl__ApplicationName(NULL), jsdl__ApplicationVersion(NULL), jsdl__Description(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__Application_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Resources_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Resources_USCOREType (66)
/* jsdl:Resources_Type */
class SOAP_CMAC jsdl__Resources_USCOREType : public xsd__anyType
{
public:
	class jsdl__CandidateHosts_USCOREType *jsdl__CandidateHosts;	/* optional element of type jsdl:CandidateHosts_Type */
	std::vector<class jsdl__FileSystem_USCOREType * >jsdl__FileSystem;	/* optional element of type jsdl:FileSystem_Type */
	bool *jsdl__ExclusiveExecution;	/* optional element of type xsd:boolean */
	jsdl__OperatingSystem_USCOREType *jsdl__OperatingSystem;	/* optional element of type jsdl:OperatingSystem_Type */
	jsdl__CPUArchitecture_USCOREType *jsdl__CPUArchitecture;	/* optional element of type jsdl:CPUArchitecture_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualCPUSpeed;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualCPUTime;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualCPUCount;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualNetworkBandwidth;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualPhysicalMemory;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualVirtualMemory;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__IndividualDiskSpace;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalCPUTime;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalCPUCount;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalPhysicalMemory;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalVirtualMemory;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalDiskSpace;	/* optional element of type jsdl:RangeValue_Type */
	jsdl__RangeValue_USCOREType *jsdl__TotalResourceCount;	/* optional element of type jsdl:RangeValue_Type */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_besfactory_jsdl__Resources_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Resources_USCOREType() : jsdl__CandidateHosts(NULL), jsdl__ExclusiveExecution(NULL), jsdl__OperatingSystem(NULL), jsdl__CPUArchitecture(NULL), jsdl__IndividualCPUSpeed(NULL), jsdl__IndividualCPUTime(NULL), jsdl__IndividualCPUCount(NULL), jsdl__IndividualNetworkBandwidth(NULL), jsdl__IndividualPhysicalMemory(NULL), jsdl__IndividualVirtualMemory(NULL), jsdl__IndividualDiskSpace(NULL), jsdl__TotalCPUTime(NULL), jsdl__TotalCPUCount(NULL), jsdl__TotalPhysicalMemory(NULL), jsdl__TotalVirtualMemory(NULL), jsdl__TotalDiskSpace(NULL), jsdl__TotalResourceCount(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__Resources_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__CandidateHosts_USCOREType
#define SOAP_TYPE_besfactory_jsdl__CandidateHosts_USCOREType (67)
/* jsdl:CandidateHosts_Type */
class SOAP_CMAC jsdl__CandidateHosts_USCOREType : public xsd__anyType
{
public:
	std::vector<std::string >jsdl__HostName;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_besfactory_jsdl__CandidateHosts_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__CandidateHosts_USCOREType()  { }
	virtual ~jsdl__CandidateHosts_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__CPUArchitecture_USCOREType
#define SOAP_TYPE_besfactory_jsdl__CPUArchitecture_USCOREType (68)
/* jsdl:CPUArchitecture_Type */
class SOAP_CMAC jsdl__CPUArchitecture_USCOREType : public xsd__anyType
{
public:
	enum jsdl__ProcessorArchitectureEnumeration jsdl__CPUArchitectureName;	/* required element of type jsdl:ProcessorArchitectureEnumeration */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_besfactory_jsdl__CPUArchitecture_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__CPUArchitecture_USCOREType() : jsdl__CPUArchitectureName((enum jsdl__ProcessorArchitectureEnumeration)0), __anyAttribute(NULL) { }
	virtual ~jsdl__CPUArchitecture_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__FileSystem_USCOREType
#define SOAP_TYPE_besfactory_jsdl__FileSystem_USCOREType (69)
/* jsdl:FileSystem_Type */
class SOAP_CMAC jsdl__FileSystem_USCOREType : public xsd__anyType
{
public:
	enum jsdl__FileSystemTypeEnumeration *jsdl__FileSystemType;	/* optional element of type jsdl:FileSystemTypeEnumeration */
	std::string *jsdl__Description;	/* optional element of type jsdl:Description_Type */
	std::string *jsdl__MountPoint;	/* optional element of type xsd:string */
	jsdl__RangeValue_USCOREType *jsdl__DiskSpace;	/* optional element of type jsdl:RangeValue_Type */
	std::vector<char * >__any;
	std::string name;	/* required attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE_besfactory_jsdl__FileSystem_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__FileSystem_USCOREType() : jsdl__FileSystemType(NULL), jsdl__Description(NULL), jsdl__MountPoint(NULL), jsdl__DiskSpace(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__FileSystem_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__OperatingSystem_USCOREType
#define SOAP_TYPE_besfactory_jsdl__OperatingSystem_USCOREType (70)
/* jsdl:OperatingSystem_Type */
class SOAP_CMAC jsdl__OperatingSystem_USCOREType : public xsd__anyType
{
public:
	class jsdl__OperatingSystemType_USCOREType *jsdl__OperatingSystemType;	/* optional element of type jsdl:OperatingSystemType_Type */
	std::string *jsdl__OperatingSystemVersion;	/* optional element of type xsd:string */
	std::string *jsdl__Description;	/* optional element of type jsdl:Description_Type */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE_besfactory_jsdl__OperatingSystem_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__OperatingSystem_USCOREType() : jsdl__OperatingSystemType(NULL), jsdl__OperatingSystemVersion(NULL), jsdl__Description(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__OperatingSystem_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__OperatingSystemType_USCOREType
#define SOAP_TYPE_besfactory_jsdl__OperatingSystemType_USCOREType (71)
/* jsdl:OperatingSystemType_Type */
class SOAP_CMAC jsdl__OperatingSystemType_USCOREType : public xsd__anyType
{
public:
	enum jsdl__OperatingSystemTypeEnumeration jsdl__OperatingSystemName;	/* required element of type jsdl:OperatingSystemTypeEnumeration */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE_besfactory_jsdl__OperatingSystemType_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__OperatingSystemType_USCOREType() : jsdl__OperatingSystemName((enum jsdl__OperatingSystemTypeEnumeration)0), __anyAttribute(NULL) { }
	virtual ~jsdl__OperatingSystemType_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__DataStaging_USCOREType
#define SOAP_TYPE_besfactory_jsdl__DataStaging_USCOREType (72)
/* jsdl:DataStaging_Type */
class SOAP_CMAC jsdl__DataStaging_USCOREType : public xsd__anyType
{
public:
	std::string jsdl__FileName;	/* required element of type xsd:string */
	std::string *jsdl__FilesystemName;	/* optional element of type xsd:NCName */
	enum jsdl__CreationFlagEnumeration jsdl__CreationFlag;	/* required element of type jsdl:CreationFlagEnumeration */
	bool *jsdl__DeleteOnTermination;	/* optional element of type xsd:boolean */
	class jsdl__SourceTarget_USCOREType *jsdl__Source;	/* optional element of type jsdl:SourceTarget_Type */
	jsdl__SourceTarget_USCOREType *jsdl__Target;	/* optional element of type jsdl:SourceTarget_Type */
	std::vector<char * >__any;
	std::string *name;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_besfactory_jsdl__DataStaging_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__DataStaging_USCOREType() : jsdl__FilesystemName(NULL), jsdl__CreationFlag((enum jsdl__CreationFlagEnumeration)0), jsdl__DeleteOnTermination(NULL), jsdl__Source(NULL), jsdl__Target(NULL), name(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__DataStaging_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__SourceTarget_USCOREType
#define SOAP_TYPE_besfactory_jsdl__SourceTarget_USCOREType (73)
/* jsdl:SourceTarget_Type */
class SOAP_CMAC jsdl__SourceTarget_USCOREType : public xsd__anyType
{
public:
	std::string *jsdl__URI;	/* optional element of type xsd:anyURI */
	std::vector<char * >__any;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE_besfactory_jsdl__SourceTarget_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__SourceTarget_USCOREType() : jsdl__URI(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__SourceTarget_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory__FactoryResourceAttributesDocumentType
#define SOAP_TYPE_besfactory_besfactory__FactoryResourceAttributesDocumentType (29)
/* besfactory:FactoryResourceAttributesDocumentType */
class SOAP_CMAC besfactory__FactoryResourceAttributesDocumentType : public besfactory__BasicFactoryResourceAttributesDocumentType
{
public:
	bool IsAcceptingNewActivities;	/* required element of type xsd:boolean */
	std::string *CommonName;	/* optional element of type xsd:string */
	std::string *LongDescription;	/* optional element of type xsd:string */
	unsigned int TotalNumberOfActivities;	/* required element of type xsd:unsignedInt */
	std::string LocalResourceManagerType;	/* required element of type xsd:QName */
	std::vector<besfactory2__EndpointReferenceType * >ActivityReference;	/* optional element of type besfactory2:EndpointReferenceType */
	std::vector<xsd__anyType * >ContainedResourceAttributes;	/* optional element of type xsd:anyType */
	std::string NamingProfile;	/* required element of type xsd:QName */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_besfactory_besfactory__FactoryResourceAttributesDocumentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory__FactoryResourceAttributesDocumentType() : IsAcceptingNewActivities((bool)0), CommonName(NULL), LongDescription(NULL), TotalNumberOfActivities(0) { }
	virtual ~besfactory__FactoryResourceAttributesDocumentType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__RelatesToType
#define SOAP_TYPE_besfactory_besfactory2__RelatesToType (52)
/* Primitive besfactory2:RelatesToType schema type: */
class SOAP_CMAC besfactory2__RelatesToType : public xsd__anyType
{
public:
	std::string __item;
	std::string RelationshipType;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_besfactory_besfactory2__RelatesToType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__RelatesToType() : __anyAttribute(NULL) { }
	virtual ~besfactory2__RelatesToType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__AttributedURIType
#define SOAP_TYPE_besfactory_besfactory2__AttributedURIType (53)
/* Primitive besfactory2:AttributedURIType schema type: */
class SOAP_CMAC besfactory2__AttributedURIType : public xsd__anyType
{
public:
	std::string __item;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_besfactory_besfactory2__AttributedURIType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__AttributedURIType() : __anyAttribute(NULL) { }
	virtual ~besfactory2__AttributedURIType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__AttributedUnsignedLongType
#define SOAP_TYPE_besfactory_besfactory2__AttributedUnsignedLongType (54)
/* Primitive besfactory2:AttributedUnsignedLongType schema type: */
class SOAP_CMAC besfactory2__AttributedUnsignedLongType : public xsd__anyType
{
public:
	ULONG64 __item;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_besfactory_besfactory2__AttributedUnsignedLongType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__AttributedUnsignedLongType() : __item(0), __anyAttribute(NULL) { }
	virtual ~besfactory2__AttributedUnsignedLongType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__AttributedQNameType
#define SOAP_TYPE_besfactory_besfactory2__AttributedQNameType (55)
/* Primitive besfactory2:AttributedQNameType schema type: */
class SOAP_CMAC besfactory2__AttributedQNameType : public xsd__anyType
{
public:
	std::string __item;
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_besfactory_besfactory2__AttributedQNameType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         besfactory2__AttributedQNameType() : __anyAttribute(NULL) { }
	virtual ~besfactory2__AttributedQNameType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Boundary_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Boundary_USCOREType (58)
/* Primitive jsdl:Boundary_Type schema type: */
class SOAP_CMAC jsdl__Boundary_USCOREType : public xsd__anyType
{
public:
	double __item;
	bool *exclusiveBound;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_besfactory_jsdl__Boundary_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Boundary_USCOREType() : __item(0), exclusiveBound(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__Boundary_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Exact_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Exact_USCOREType (59)
/* Primitive jsdl:Exact_Type schema type: */
class SOAP_CMAC jsdl__Exact_USCOREType : public xsd__anyType
{
public:
	double __item;
	double *epsilon;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_besfactory_jsdl__Exact_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         jsdl__Exact_USCOREType() : __item(0), epsilon(NULL), __anyAttribute(NULL) { }
	virtual ~jsdl__Exact_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_besfactory_SOAP_ENV__Detail
#define SOAP_TYPE_besfactory_SOAP_ENV__Detail (140)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	xsd__anyType *besfactory__CreateActivityFaultMessage;	/* optional element of type xsd:anyType */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_besfactory___besfactory__CreateActivity
#define SOAP_TYPE_besfactory___besfactory__CreateActivity (146)
/* Operation wrapper: */
struct __besfactory__CreateActivity
{
public:
	besfactory__CreateActivityType *besfactory__CreateActivity;	/* optional element of type besfactory:CreateActivityType */
};
#endif

#ifndef SOAP_TYPE_besfactory___besfactory__GetActivityStatuses
#define SOAP_TYPE_besfactory___besfactory__GetActivityStatuses (150)
/* Operation wrapper: */
struct __besfactory__GetActivityStatuses
{
public:
	besfactory__GetActivityStatusesType *besfactory__GetActivityStatuses;	/* optional element of type besfactory:GetActivityStatusesType */
};
#endif

#ifndef SOAP_TYPE_besfactory___besfactory__TerminateActivities
#define SOAP_TYPE_besfactory___besfactory__TerminateActivities (154)
/* Operation wrapper: */
struct __besfactory__TerminateActivities
{
public:
	besfactory__TerminateActivitiesType *besfactory__TerminateActivities;	/* optional element of type besfactory:TerminateActivitiesType */
};
#endif

#ifndef SOAP_TYPE_besfactory___besfactory__GetActivityDocuments
#define SOAP_TYPE_besfactory___besfactory__GetActivityDocuments (158)
/* Operation wrapper: */
struct __besfactory__GetActivityDocuments
{
public:
	besfactory__GetActivityDocumentsType *besfactory__GetActivityDocuments;	/* optional element of type besfactory:GetActivityDocumentsType */
};
#endif

#ifndef SOAP_TYPE_besfactory___besfactory__GetFactoryAttributesDocument
#define SOAP_TYPE_besfactory___besfactory__GetFactoryAttributesDocument (162)
/* Operation wrapper: */
struct __besfactory__GetFactoryAttributesDocument
{
public:
	besfactory__GetFactoryAttributesDocumentType *besfactory__GetFactoryAttributesDocument;	/* optional element of type besfactory:GetFactoryAttributesDocumentType */
};
#endif

#ifndef SOAP_TYPE_besfactory_SOAP_ENV__Header
#define SOAP_TYPE_besfactory_SOAP_ENV__Header (163)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_besfactory_SOAP_ENV__Code
#define SOAP_TYPE_besfactory_SOAP_ENV__Code (164)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_besfactory_SOAP_ENV__Reason
#define SOAP_TYPE_besfactory_SOAP_ENV__Reason (166)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_besfactory_SOAP_ENV__Fault
#define SOAP_TYPE_besfactory_SOAP_ENV__Fault (167)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_besfactory__QName
#define SOAP_TYPE_besfactory__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_besfactory__XML
#define SOAP_TYPE_besfactory__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_besfactory_xsd__ID
#define SOAP_TYPE_besfactory_xsd__ID (11)
typedef std::string xsd__ID;
#endif

#ifndef SOAP_TYPE_besfactory_xsd__NCName
#define SOAP_TYPE_besfactory_xsd__NCName (13)
typedef std::string xsd__NCName;
#endif

#ifndef SOAP_TYPE_besfactory_xsd__QName
#define SOAP_TYPE_besfactory_xsd__QName (15)
typedef std::string xsd__QName;
#endif

#ifndef SOAP_TYPE_besfactory_xsd__anyURI
#define SOAP_TYPE_besfactory_xsd__anyURI (17)
typedef std::string xsd__anyURI;
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__RelationshipTypeOpenEnum
#define SOAP_TYPE_besfactory_besfactory2__RelationshipTypeOpenEnum (74)
typedef std::string besfactory2__RelationshipTypeOpenEnum;
#endif

#ifndef SOAP_TYPE_besfactory_besfactory2__FaultCodesOpenEnumType
#define SOAP_TYPE_besfactory_besfactory2__FaultCodesOpenEnumType (75)
typedef std::string besfactory2__FaultCodesOpenEnumType;
#endif

#ifndef SOAP_TYPE_besfactory_jsdl__Description_USCOREType
#define SOAP_TYPE_besfactory_jsdl__Description_USCOREType (88)
typedef std::string jsdl__Description_USCOREType;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace besfactory


#endif

/* End of besfactoryStub.h */
