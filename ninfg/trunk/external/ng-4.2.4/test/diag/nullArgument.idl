/*
 * $RCSfile: nullArgument.idl,v $ $Revision: 1.4 $ $Date: 2004/08/17 08:30:01 $
 * $AIST_Release: 4.2.4 $
 * $AIST_Copyright:
 *  Copyright 2003, 2004, 2005, 2006 Grid Technology Research Center,
 *  National Institute of Advanced Industrial Science and Technology
 *  Copyright 2003, 2004, 2005, 2006 National Institute of Informatics
 *  
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  $
 */
Module nullArgument;

DefClass nullArgument
{
    DefMethod nullStringInScalar(IN string inString, OUT int *rpcResult)
    {
	/* If inString is NULL, then *rpcResult is set to 1. Otherwise,
	 * *rpcResult is set to 0.
	 */
	*rpcResult = (inString == NULL) ? 1 : 0;
    }

    DefMethod nullStringInArray(IN int N, IN string inString[N], OUT int rpcResult[N])
    {
        int i;
	/* If inString[n] is NULL, then rpcResult[n] is set to 1. Otherwise,
	 * *rpcResult is set to 0.
	 */
	for (i = 0; i < N; i++) {
	    rpcResult[i] = (inString[i] == NULL) ? 1 : 0;
	}
    }

    DefMethod nullStringOutScalar(OUT string outString[1], OUT int *rpcResult)
    {
	*rpcResult = (outString == NULL) ? 1 : 0;
    }

    DefMethod nullFilenameIN(IN filename fName, OUT int *rpcResult)
    {
	/* If inString is NULL, then *rpcResult is set to 1. Otherwise,
	 * *rpcResult is set to 0.
	 */
	*rpcResult = (fName == NULL) ? 1 : 0;
    }

    DefMethod nullFilenameOUT(OUT filename fName, OUT int *rpcResult)
    {
	/* If inString is NULL, then *rpcResult is set to 1. Otherwise,
	 * *rpcResult is set to 0.
	 */
	*rpcResult = (fName == NULL) ? 1 : 0;
    }

    DefMethod nullArgument(
    	IN int		N,
	IN char		inChar[N],
	IN short	inShort[N],
	IN int		inInt[N],
	IN long		inLong[N],
	IN float	inFloat[N],
	IN double	inDouble[N],
	IN scomplex	inScomplex[N],
	IN dcomplex	inDcomplex[N])
    {
	assert(N == 0);
	assert(inChar == NULL);
	assert(inShort == NULL);
	assert(inInt == NULL);
	assert(inLong == NULL);
	assert(inFloat == NULL);
	assert(inDouble == NULL);
	assert(inScomplex == NULL);
	assert(inDcomplex == NULL);
    }
}
