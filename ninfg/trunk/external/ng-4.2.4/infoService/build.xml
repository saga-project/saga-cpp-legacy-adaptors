<?xml version="1.0"?>
<project default="all" name="Ninf-G Info" basedir=".">
	<description>Ninf-G Info</description>
	<property environment="env"/>
	<property file="build.properties"/>
	<property name="globus.location" location="${env.GLOBUS_LOCATION}"/>
	<property name="gar.name" value="${package.name}.gar"/>
	<property name="jar.name" value="${package.name}.jar"/>
	<property name="build.dir" location="build"/>
	<property name="build.dest" location="build/classes"/>
	<property name="build.lib.dir" location="build/lib"/>
	<property name="stubs.dir" location="build/stubs"/>
	<property name="stubs.src" location="build/stubs/src"/>
	<property name="stubs.dest" location="build/stubs/classes"/>
	<property name="stubs.jar.name" value="${package.name}_stubs.jar"/>
	<property name="build.packages" location="${globus.location}/share/globus_wsrf_common/build-packages.xml"/>
	<property name="build.stubs" location="${globus.location}/share/globus_wsrf_tools/build-stubs.xml"/>
	<property name="compile.debug" value="true"/>
	<property name="compile.deprecation" value="false"/>
	<property name="schema.src" location="${globus.location}/share/schema"/>
	<property name="schema.local" location="schema"/>
	<property name="schema.dest" location="${build.dir}/schema"/>
	<property name="garjars.id" value="garjars"/>
	<fileset dir="${build.lib.dir}" id="garjars"/>
	<property name="garschema.id" value="garschema"/>
	<fileset dir="${schema.dest}" id="garschema">
		<include name="${schema.path}/**/*"/>
	</fileset>
	<property name="garetc.id" value="garetc"/>
	<fileset dir="etc" id="garetc"/>
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.dest}"/>
		<mkdir dir="${build.lib.dir}"/>
		<mkdir dir="${stubs.dir}"/>
		<mkdir dir="${stubs.src}"/>
		<mkdir dir="${stubs.dest}"/>
		<mkdir dir="${schema.dest}"/>
		<mkdir dir="${schema.local}"/>
                <mkdir dir="${schema.local}/ng4grpcinfo"/>
                <exec
                    executable="./GrpcInfo.wsdl.sh"
                    output="${schema.local}/ng4grpcinfo/GrpcInfo.wsdl"/>
		<copy toDir="${schema.dest}">
			<fileset dir="${schema.src}" casesensitive="yes">
				<include name="wsrf/**/*"/>
				<include name="ws/**/*"/>
			</fileset>
			<fileset dir="${schema.local}" casesensitive="yes">
				<include name="${schema.path}/*"/>
			</fileset>
		</copy>
		<available property="stubs.present" type="dir" file="${stubs.dest}/${stubs.java.subdirs}"/>
	</target>
	<target name="flatten" depends="init">
		<ant antfile="${build.stubs}" target="flatten">
			<property name="source.flatten.dir" location="${schema.dest}/${schema.path}"/>
			<property name="target.flatten.dir" location="${schema.dest}/${schema.path}"/>
			<property name="wsdl.source" value="${interface.name}.wsdl"/>
			<property name="wsdl.target" value="${interface.name}_flattened.wsdl"/>
			<property name="wsdl.porttype" value="${interface.name}PortType"/>
		</ant>
	</target>
	<target name="generateBindings" depends="flatten">
		<ant antfile="${build.stubs}" target="generateBinding">
			<property name="source.binding.dir" value="${schema.dest}/${schema.path}"/>
			<property name="target.binding.dir" value="${schema.dest}/${schema.path}"/>
			<property name="porttype.wsdl" value="${interface.name}_flattened.wsdl"/>
			<property name="binding.root" value="${interface.name}"/>
		</ant>
	</target>
	<target name="stubs" unless="stubs.present" depends="generateBindings">
		<ant antfile="${build.stubs}" target="mergePackageMapping">
			<property name="mapping.src" location="NStoPkg.properties"/>
			<property name="mapping.dst" location="${build.dir}/NStoPkg.properties"/>
		</ant>
		<ant antfile="${build.stubs}" target="generateStubs">
			<property name="mapping.file" location="${build.dir}/NStoPkg.properties"/>
			<property name="source.stubs.dir" location="${schema.dest}/${schema.path}"/>
			<property name="target.stubs.dir" location="${stubs.src}"/>
			<property name="wsdl.file" value="${interface.name}_service.wsdl"/>
		</ant>
	</target>
	<target name="compileStubs" depends="stubs">
		<javac srcdir="${stubs.src}" destdir="${stubs.dest}" debug="${compile.debug}" deprecation="${compile.deprecation}">
			<include name="**/*.java"/>
			<classpath>
				<fileset dir="${globus.location}/lib">
					<include name="common/*.jar"/>
					<include name="*.jar"/>
					<exclude name="${stubs.jar.name}"/>
					<exclude name="${jar.name}"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="compile" depends="compileStubs">
		<javac srcdir="src" destdir="${build.dest}" debug="${compile.debug}" deprecation="${compile.deprecation}">
			<classpath>
				<pathelement location="${stubs.dest}"/>
				<fileset dir="${globus.location}/lib">
					<include name="common/*.jar"/>
					<include name="*.jar"/>
					<exclude name="${stubs.jar.name}"/>
					<exclude name="${jar.name}"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="jar" depends="compile">
		<jar jarfile="${build.lib.dir}/${jar.name}" basedir="${build.dest}"/>
	</target>
	<target name="jarStubs" depends="compileStubs">
		<jar destfile="${build.lib.dir}/${stubs.jar.name}" basedir="${stubs.dest}"/>
	</target>
	<target name="dist" depends="jarStubs, jar">
		<ant antfile="${build.packages}" target="makeGar">
			<reference refid="${garjars.id}"/>
			<reference refid="${garschema.id}"/>
			<reference refid="${garetc.id}"/>
		</ant>
	</target>
	<target name="clean">
		<delete dir="tmp"/>
                <delete dir="${schema.location}"/>
		<delete dir="${build.dir}"/>
		<delete file="${gar.name}"/>
	</target>
	<target name="deploy">
		<ant antfile="${build.packages}" target="deployGar">
		</ant>
	</target>
	<target name="undeploy">
		<ant antfile="${build.packages}" target="undeployGar">
			<property name="gar.id" value="${package.name}"/>
		</ant>
		<delete verbose="true" dir="${globus.location}/share/schema/${package.name}" />
	</target>
	<target name="all" depends="dist"/>
</project>
